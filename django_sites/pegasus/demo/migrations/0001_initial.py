# Generated by Django 2.1.7 on 2019-04-18 08:10

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='RegisteredUser',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(max_length=10)),
                ('physical_address', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bio', models.CharField(blank=True, max_length=500, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='demo/profile_pictures')),
                ('creation_time', models.DateField(default=django.utils.timezone.now, editable=False)),
                ('is_student', models.BooleanField()),
                ('email', models.EmailField(max_length=100)),
                ('username', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=50)),
                ('cleanliness', models.IntegerField(blank=True, null=True)),
                ('socialness', models.IntegerField(blank=True, null=True)),
                ('partiness', models.IntegerField(blank=True, null=True)),
                ('extra', models.IntegerField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'unverified_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DisabledUser',
            fields=[
                ('deletion_time', models.DateField(default=django.utils.timezone.now, editable=False)),
                ('secret_key', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100)),
            ],
            options={
                'db_table': 'disabled_users',
            },
        ),
        migrations.CreateModel(
            name='Domicile',
            fields=[
                ('residence_id', models.AutoField(primary_key=True, serialize=False)),
                ('residence_type', models.CharField(choices=[('apartment', 'Apartment'), ('house', 'House'), ('room', 'Room'), ('garage', 'Garage'), ('in_law_unit', 'In-Law Unit'), ('other', 'Other')], max_length=50)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.IntegerField()),
                ('size', models.IntegerField()),
                ('creation_time', models.DateField(default=django.utils.timezone.now, editable=False)),
            ],
            options={
                'db_table': 'residences',
            },
        ),
        migrations.CreateModel(
            name='ActiveListing',
            fields=[
                ('residence', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='demo.Domicile')),
                ('tenants', models.CharField(max_length=100)),
                ('owner', models.CharField(max_length=15)),
                ('price', models.FloatField(max_length=10)),
                ('pet_friendly', models.BooleanField()),
                ('pets_allowed', models.CharField(blank=True, max_length=100, null=True)),
                ('limit_tenant_count', models.IntegerField(blank=True, null=True)),
                ('current_tenant_count', models.IntegerField(blank=True, null=True)),
                ('amenities', models.CharField(blank=True, max_length=100, null=True)),
                ('utilities_included_rent', models.BooleanField()),
                ('coordinates', models.CharField(blank=True, max_length=20, null=True)),
                ('description', models.TextField()),
                ('photo', models.ImageField(upload_to='demo/residence_pictures')),
            ],
            options={
                'db_table': 'active_listings',
            },
        ),
        migrations.CreateModel(
            name='VerifiedUser',
            fields=[
                ('registereduser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'verified_users',
            },
            bases=('demo.registereduser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='registereduser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='registereduser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('verifieduser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='demo.VerifiedUser')),
            ],
            options={
                'db_table': 'admins',
            },
            bases=('demo.verifieduser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('creation_time', models.DateField(default=django.utils.timezone.now, editable=False)),
                ('text', models.CharField(max_length=500)),
                ('poster', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='comment_poster_id', serialize=False, to='demo.VerifiedUser', to_field='username')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Landlord',
            fields=[
                ('verifieduser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='demo.VerifiedUser')),
                ('agency', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'landlords',
            },
            bases=('demo.verifieduser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('creation_time', models.DateField(default=django.utils.timezone.now, editable=False)),
                ('text', models.CharField(max_length=500)),
                ('poster', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='message_poster_id', serialize=False, to='demo.VerifiedUser', to_field='username')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('creation_time', models.DateField(default=django.utils.timezone.now, editable=False)),
                ('text', models.CharField(max_length=500)),
                ('poster', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='post_poster_id', serialize=False, to='demo.VerifiedUser', to_field='username')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StarTenant',
            fields=[
                ('verifieduser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='demo.VerifiedUser')),
            ],
            options={
                'db_table': 'star_tenants',
            },
            bases=('demo.verifieduser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('verifieduser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='demo.VerifiedUser')),
            ],
            options={
                'db_table': 'students',
            },
            bases=('demo.verifieduser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='recipient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recipient_id', to='demo.VerifiedUser', to_field='username'),
        ),
    ]
